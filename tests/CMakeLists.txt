CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

PROJECT (HANDYSTATS_TESTS)

IF (NOT WITH_TESTS)
	RETURN ()
ENDIF ()

ENABLE_TESTING()

# Threads
FIND_PACKAGE (Threads REQUIRED)
INCLUDE_DIRECTORIES (${Threads_INCLUDE_DIR})

# GTest
FIND_PACKAGE (GTest)
IF (NOT GTEST_FOUND)
		FIND_PATH (GTEST_SRC_DIR src/gtest_main.cc HINTS /usr/src/gtest)
		FIND_PATH (GTEST_INCLUDE_DIRS gtest.h HINTS /usr/include/gtest)
		IF (GTEST_SRC_DIR AND GTEST_INCLUDE_DIRS)
			MESSAGE (STATUS "GTest source package found. Compiling...")
			ADD_SUBDIRECTORY (${GTEST_SRC_DIR} ${CMAKE_BINARY_DIR}/gtest EXCLUDE_FROM_ALL)
			SET (GTEST_FOUND 1)
			SET (GTEST_MAIN_LIBRARIES ${CMAKE_BINARY_DIR}/gtest/libgtest_main.a)
			SET (GTEST_LIBRARIES ${CMAKE_BINARY_DIR}/gtest/libgtest.a)
			SET (GTEST_BOTH_LIBRARIES ${GTEST_LIBRARIES} ${GTEST_MAIN_LIBRARIES})
			SET (GTEST_TARGETS gtest gtest_main)
		ELSE (GTEST_SRC_DIR AND GTEST_INCLUDE_DIRS)
			MESSAGE (SEND_ERROR "Cannot find required package: GTest")
		ENDIF (GTEST_SRC_DIR AND GTEST_INCLUDE_DIRS)
ELSE (NOT GTEST_FOUND)
	SET (GTEST_TARGETS "")
ENDIF (NOT GTEST_FOUND)
INCLUDE_DIRECTORIES (${GTEST_INCLUDE_DIRS})
INCLUDE_DIRECTORIES (${GTEST_SOURCE_DIR} ${GTEST_SOURCE_DIR}/include)

INCLUDE_DIRECTORIES (BEFORE ${HANDYSTATS_INCLUDE_DIR})

# check COMMAND
ADD_CUSTOM_TARGET (check COMMAND ${CMAKE_CTEST_COMMAND} -V)


SET (TESTS_LINK_FLAGS "-Wl,-rpath,${HANDYSTATS_LIBRARY_OUTPUT_DIR}")
SET (TESTS_PROPERTIES_CXX PROPERTIES LINK_FLAGS "${TESTS_LINK_FLAGS}" LINKER_LANGUAGE CXX)
SET (TESTS_PROPERTIES_C PROPERTIES LINK_FLAGS "${TESTS_LINK_FLAGS}" LINKER_LANGUAGE C)
SET (TESTS_LIBRARIES ${HANDYSTATS_LIBRARY} ${GTEST_BOTH_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})

# GTest tests
FILE (GLOB_RECURSE TESTS_SRC_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.gtest.cpp")
FOREACH (TEST_SRC_FILE IN LISTS TESTS_SRC_FILES)
	STRING (REGEX REPLACE "[.]gtest[.]cpp$" "_test" TEST_NAME ${TEST_SRC_FILE})

	ADD_EXECUTABLE (${TEST_NAME} EXCLUDE_FROM_ALL ${CMAKE_CURRENT_SOURCE_DIR}/${TEST_SRC_FILE})
	SET_TARGET_PROPERTIES (${TEST_NAME} ${TESTS_PROPERTIES_CXX})
	TARGET_LINK_LIBRARIES (${TEST_NAME} ${TESTS_LIBRARIES})

	ADD_TEST (${TEST_NAME} ${TEST_NAME})
	IF (NOT "${GTEST_TARGETS}" STREQUAL "")
		ADD_DEPENDENCIES (${TEST_NAME} ${GTEST_TARGETS})
	ENDIF ()

	ADD_DEPENDENCIES (check ${TEST_NAME})
ENDFOREACH ()

# C binging tests
ADD_LIBRARY (c_binding_testlib STATIC EXCLUDE_FROM_ALL ${CMAKE_CURRENT_SOURCE_DIR}/c-binding/test.c)
SET_TARGET_PROPERTIES (c_binding_testlib ${TESTS_PROPERTIES_C})
TARGET_LINK_LIBRARIES (c_binding_testlib ${TESTS_LIBRARIES})

ADD_EXECUTABLE (c_binding_test EXCLUDE_FROM_ALL ${CMAKE_CURRENT_SOURCE_DIR}/c-binding/check.cpp)
SET_TARGET_PROPERTIES (c_binding_test ${TESTS_PROPERTIES_CXX})
TARGET_LINK_LIBRARIES (c_binding_test ${TESTS_LIBRARIES} c_binding_testlib)

ADD_TEST(c_binding_test c_binding_test)
ADD_DEPENDENCIES (c_binding_test ${GTEST_TARGETS} c_binding_testlib)
ADD_DEPENDENCIES (check c_binding_test)
